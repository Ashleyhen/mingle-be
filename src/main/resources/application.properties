quarkus.datasource.db-kind = postgresql
quarkus.datasource.password = mysecretpassword
quarkus.datasource.reactive.reconnect-attempts=5
quarkus.datasource.reactive.url = postgresql://localhost:5433/mingle
quarkus.datasource.username = mingle-be
quarkus.datasource.reactive=true

quarkus.grpc.server.port=9001
quarkus.grpc.server.use-separate-server=true


quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.format-sql=true
quarkus.hibernate-orm.log.sql=true


quarkus.oauth2.client-id=mingle-user-client
quarkus.oauth2.introspection-url=http://localhost:8000/realms/mingle/protocol/openid-connect/token/introspectquarkus.http.cors.access-control-allow-credentials=true

quarkus.oidc.auth-server-url=http://localhost:8000/realms/mingle
quarkus.oidc.client-id=mingle-user-client
# Remove the secret line for PUBLIC clients (PKCE)
# quarkus.oidc.credentials.secret=your-client-secret
quarkus.keycloak.devservices.enabled=false
quarkus.datasource.devservices.enabled=false
quarkus.devservices.enabled=false
quarkus.oidc.token-path=/protocol/openid-connect/token
quarkus.oidc.introspection-path=/protocol/openid-connect/token/introspect
quarkus.http.cors.access-control-max-age=86400
quarkus.http.cors.exposed-headers=grpc-status,grpc-message
quarkus.http.cors.headers=Content-Type,Authorization
quarkus.http.cors.methods=GET,POST,PUT
quarkus.http.cors.origins=*
quarkus.http.cors=true
quarkus.http.port=9000
logging.level.root=DEBUG
quarkus.http.auth.proactive=true
quarkus.security.users.embedded.enabled=true
quarkus.grpc.server.interceptors=AuthInterceptor
mp.jwt.verify.enable=false  # Don't use in production!
# For Keycloak (recommended)

mp.jwt.verify.publickey.location=http://localhost:8080/realms/mingle/protocol/openid-connect/certs
mp.jwt.verify.issuer=http://localhost:8080/realms/mingle

# OR if using a static public key